#pragma checksum "C:\Users\Данил\desktop\Phonebook\Phonebook.Client\Views\Contacts\List.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "84a85dd341e04d98aa7f1c31c7c1a420d0e97fda"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Contacts_List), @"mvc.1.0.view", @"/Views/Contacts/List.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Contacts/List.cshtml", typeof(AspNetCore.Views_Contacts_List))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"84a85dd341e04d98aa7f1c31c7c1a420d0e97fda", @"/Views/Contacts/List.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e7db4ab9c6ffca5dd66ab610ad7a8cff6475d1e8", @"/Views/_ViewImports.cshtml")]
    public class Views_Contacts_List : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Данил\desktop\Phonebook\Phonebook.Client\Views\Contacts\List.cshtml"
  
    Layout = "_Layout";
    ViewBag.Title = "Contacts";

#line default
#line hidden
            BeginContext(65, 733, true);
            WriteLiteral(@"
<style>
    a {
        color: #fff;
    }

    #create-btn {
        margin: 30px 0;
    }
</style>



<div class=""container"">
    <div style=""display: none"" class=""alert alert-danger"" id=""error-alert"" role=""alert""></div>
    <a href=""/contacts/create/"">
        <button id=""create-btn"" type=""button"" class=""btn btn-primary"">New contact</button>
    </a>
    <table class=""table table-striped"" id=""contacts-table"">
        <thead>
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">Name</th>
                <th scope=""col"">Phone</th>
                <th scope=""col"">Handle</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>



");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(816, 1824, true);
                WriteLiteral(@"
    <script>

        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            type: 'GET',
            url: `http://localhost:5002/api/contacts?userId=${sessionStorage.getItem(""userId"")}`,

            success: function (response) {
                displayContacts(response);
            },

            error: function (error) {
                displayError(error.responseText);
            },
        });

        function displayContacts(response) {
            const data = response;

            data
                .forEach((contact, index) => {
                    const row = `<tr>
                                  <th scope=""row"">${index + 1}</th>
                                  <td>${contact.name}</td>
                                  <td>+${contact.phone}</td>
                                  <td>
                                       <a href=""/contacts/update/${contact.");
                WriteLiteral(@"id}"">
                                            <button type=""button"" class=""btn btn-primary""><i class=""fas fa-pencil-alt""></i></button>
                                       </a>
                                       <a href=""/contacts/delete/${contact.id}"">
                                            <button type=""button"" class=""btn btn-danger""><i class=""fas fa-times""></i></button>
                                       </a>
                                  </td>
                               </tr>`;
                    $(""#contacts-table"").append(row);
                }); 
        }

        function displayError(error) {
            let errorAlert = $(""#error-alert"")
            errorAlert.text(error);
            errorAlert.fadeIn(100);
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
